
#!/usr/bin/env bash

dry_run="0"

# Fallback if XDG_CONFIG_HOME is not set
if [ -z "$XDG_CONFIG_HOME" ]; then
    echo "no xdg config hom"
    echo "using ~/.config"
    XDG_CONFIG_HOME="$HOME/.config"
fi

# Make sure DEV_ENV is set
if [ -z "$DEV_ENV" ]; then
    echo "env var DEV_ENV needs to be present"
    exit 1
fi

# Handle dry-run flag
if [[ $1 == "--dry" ]]; then
    dry_run="1"
fi

log() {
    if [[ "$dry_run" == "1" ]]; then
        echo "[DRY_RUN]: $1"
    else
        echo "$1"
    fi
}

log "env: $DEV_ENV"

update_files() {
    log "copying over files from: $1"
    pushd "$1" &> /dev/null || return

    configs=$(find . -mindepth 1 -maxdepth 1 -type d)
    for c in $configs; do
        directory="${2%/}/${c#./}"
        log "    removing: rm -rf $directory"
        if [[ "$dry_run" == "0" ]]; then
            rm -rf "$directory"
        fi

        log "    copying env: cp -r $c $2"
        if [[ "$dry_run" == "0" ]]; then
            cp -r "./$c" "$2"
        fi
    done

    popd &> /dev/null
}

copy() {
    if [ ! -f "$1" ]; then
        log "skipping missing file: $1"
        return
    fi

    mkdir -p "$(dirname "$2")"

    log "removing: $2"
    if [[ "$dry_run" == "0" ]]; then
        rm -f "$2"
    fi

    log "copying: $1 to $2"
    if [[ "$dry_run" == "0" ]]; then
        cp "$1" "$2"
    fi
}

# Ensure target script dir exists
mkdir -p "$HOME/.local/scripts"

# Sync dotfiles
update_files "$DEV_ENV/env/.config" "$XDG_CONFIG_HOME"
update_files "$DEV_ENV/env/.local" "$HOME/.local"

# Copy individual files
copy "$DEV_ENV/tmux-sessionizer/tmux-sessionizer" "$HOME/.local/scripts/tmux-sessionizer"
copy "$DEV_ENV/env/.zsh_profile" "$HOME/.zsh_profile"
copy "$DEV_ENV/env/.zshrc" "$HOME/.zshrc"
copy "$DEV_ENV/env/.xprofile" "$HOME/.xprofile"
copy "$DEV_ENV/env/.tmux-sessionizer" "$HOME/.tmux-sessionizer"
copy "$DEV_ENV/dev-env" "$HOME/.local/scripts/dev-env"

log "âœ… Dev environment installed."
